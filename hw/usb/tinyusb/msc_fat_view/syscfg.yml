#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

syscfg.defs:
    MSC_FAT_VIEW_DISK_SIZE:
        description: Simulated disk size in kB.
        value: 4096
    MSC_FAT_VIEW_SECTORS_PER_CLUSTER:
        description: Simulated disk sectors per cluster.
        value: 1

    MSC_FAT_VIEW_SYSINIT_STAGE:
        description: >
            Sysinit stage for the usb_msc_fat package.
        value: 503
    MSC_FAT_VIEW_VOLUME_NAME:
        description: >
            FAT volume name.
        value: '"MYNEWT"'
    MSC_FAT_VIEW_AUTOCONFIRM:
        description: >
            Auto-confirm image when directory is read after reboot.
        value: 1

    MSC_FAT_VIEW_HUGE_FILE:
        description: >
            Add 'Huge file' to root directory, this can be used to test performance
            of USB. Reads from this file generate pattern.  Writes are ignored.
        value: 0
    MSC_FAT_VIEW_HUGE_FILE_SIZE:
        description: >
            'Huge file' size in bytes.  If set to 0 huge file size will be computed automatically.
        value: 0
    MSC_FAT_VIEW_SLOT0_IMAGE:
        description: >
            Show image from slot 0 as a file 'FIRMWARE.IMG'.
        value: 0
    MSC_FAT_VIEW_SLOT0_HEX:
        description: >
            Show content of slot 0 as a text file 'SLOT0.HEX'.
            This is just to show example of custom directory entries.
        value: 0
    MSC_FAT_VIEW_MYNEWT_SHORTCUT:
        description: >
            If set to 1, 'MYNEWT.HTM' file that will redirect to mynewt web page.
        value: 1
    MSC_FAT_VIEW_DEFAULT_README:
        description: >
            If set to 1, adds default 'README.TXT' file with some basic information about firmware.
        value: 1
    MSC_FAT_VIEW_DEFAULT_README_APP_NAME:
        description: >
            Application name that will be put in default README.TXT.
        value: '"Mynewt+TinyUSB"'
    MSC_FAT_VIEW_DEFAULT_README_INCLUDE_HASHES:
        description: >
            Add git hashes into README.TXT.
        value: 1
    MSC_FAT_VIEW_DROP_IMAGE_HERE:
        description: >
            If set to 1, adds 'Drop image here' file.
        value: 0
    MSC_FAT_VIEW_SYSTEM_VOLUME_INFORMATION:
        description: >
            If set to 1, adds 'System Volume Information' file.
            Normally this if folder (not file) generated by Windows.
            If this file is present Windows will not create folder saving time for writes.
        value: 0

    MSC_FAT_VIEW_LOG_MOD:
        description: 'Numeric module ID to use for MSC FAT view log messages.'
        value: 32
    MSC_FAT_VIEW_LOG_LVL:
        description: 'Minimum level for the MSC FAT view log.'
        value: 1

    MSC_FAT_BOOT_PIN:
        description: >
            GPIO pin to check during boot for DFU activation.
        value: -1
    MSC_FAT_BOOT_PIN_VALUE:
        description: >
            GPIO pin value required for DFU activation.
        value: 0
    MSC_FAT_BOOT_PIN_PULL:
        description: >
            Set to 1 if boot pin needs internal pull-up resistor.
            Set to 2 if boto pin needs internal pull-down resistor.
        value: 0

syscfg.vals:
    USBD_MSC: 1

syscfg.restrictions:
    - "USBD_MSC"

syscfg.logs:
    MSC_FAT_VIEW_LOG:
        module: MYNEWT_VAL(MSC_FAT_VIEW_LOG_MOD)
        level: MYNEWT_VAL(MSC_FAT_VIEW_LOG_LVL)
